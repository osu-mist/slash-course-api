swagger: '2.0'

info:
  version: "0.0.0"
  title: Slash Course API

paths:
  /slash_courses:
    
    # Get slash courses information 
    get:
      tags: 
        - slash_course
      description: "Gets all slash courses information or filter by giving parameter"
      produces:
        - application/json
      parameters:
        - name: course_num
          in: query
          description: "Search all slash courses by course number"
          required: false
          type: string
        - name: term
          in: query
          description: "Search all slash courses by term"
          required: false
          type: string
        - name: department
          in: query
          description: "Search all slash courses by department"
          required: false
          type: string
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/CourseObjects"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal server errors"
          schema:
            $ref: "#/definitions/Errors"

    # Add new slash course
    post:
      tags:
        - slash_course
      description: "Add a new Slash_Courses object"
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: "Slash course information which will be added"
          required: true
          schema:
            $ref: "#/definitions/CourseObject"
      responses:
        "201":
          description: "Resource created"
        "401":
          description: "Not authorized"
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: "Invalid input"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal server errors"
          schema:
            $ref: "#/definitions/Errors"

  /slash_courses/{crn}:
    
    # Get slash course information 
    get:
      tags:
        - slash_course
      description: "Search slash course by CRN"
      operationId: getByCRN
      produces:
        - application/json
      parameters:
        - name: crn
          in: path
          description: "Unique CRN for searching purpose"
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: "Successful response"
          schema:
            $ref: "#/definitions/CourseObject"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal server errors"
          schema:
            $ref: "#/definitions/Errors"

    # Update slash course information 
    put:
      tags:
        - slash_course
      description: "Update slash course details by CRN"
      produces:
        - application/json
      parameters:
        - name: crn
          in: path
          description: "Unique CRN for searching purpose"
          required: true
          type: integer
          format: int32
        - name: body
          in: body
          description: "Slash course information which will be updated"
          required: true
          schema:
            $ref: "#/definitions/CourseObject"
      responses:
        "200":
          description: "Successful response"
        "201":
          description: "Resource created"
        "401":
          description: "Not authorized"
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: "Not found"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal server error"
          schema:
            $ref: "#/definitions/Errors"

    # Delete slash course information 
    delete:
      tags:
        - slash_course
      description: "Delete a Slash_Courses object course by CRN"
      produces:
        - application/json
      parameters:
        - name: crn
          in: path
          description: "Unique CRN for searching purpose"
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: "Successful response"
        "202":
          description: "Delete request accepted"
        "400":
          description: "Invalid value"
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: "Not authorized"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Internal server errors"
          schema:
            $ref: "#/definitions/Error"
          
definitions:
            
  # Course object schema
  CourseObject:
    properties:
      crn:
        type: integer
        format: int32
      course_num:
        type: string
      course_name:
        type: string
      slash:
        type: integer
        format: int32
      department:
        type: string
      term:
        type: string
      instructor:
        type: string
      day:
        type: string
      time:
        type: string
      location:
        type: string
      type:
        type: string
            
  # A list of course objects
  CourseObjects:
    properties:
      data:
        $ref: "#/definitions/CourseObject"
            
  # Error object schema
  Error:
    type: object
    properties:
      status:
        type: integer
        format: int32
      developerMessage:
        type: string
      userMessafe:
        type: string
      code:
        type: integer
      details:
        type: string
   
  # A list of error objects
  Errors:
    title: ArrayOfErrors
    type: array
    items:
      $ref: "#/definitions/Error"